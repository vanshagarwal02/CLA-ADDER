$date
	Wed Nov 20 16:36:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! S [3:0] $end
$var wire 1 " C4 $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C0 $end
$var reg 1 & clk $end
$scope module cla $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 % C0 $end
$var wire 1 & clk $end
$var wire 4 ) S_ff [3:0] $end
$var wire 4 * S [3:0] $end
$var wire 1 + C4_ff $end
$var wire 1 " C4 $end
$var wire 4 , B_ff [3:0] $end
$var wire 4 - A_ff [3:0] $end
$scope module cla $end
$var wire 4 . A [3:0] $end
$var wire 4 / B [3:0] $end
$var wire 1 % C0 $end
$var wire 1 0 C1 $end
$var wire 1 1 C2 $end
$var wire 1 2 C3 $end
$var wire 1 + C4 $end
$var wire 1 3 a1 $end
$var wire 1 4 a2_1 $end
$var wire 1 5 a2_2 $end
$var wire 1 6 a3_1 $end
$var wire 1 7 a3_2 $end
$var wire 1 8 a3_3 $end
$var wire 1 9 a4_1 $end
$var wire 1 : a4_2 $end
$var wire 1 ; a4_3 $end
$var wire 1 < a4_4 $end
$var wire 4 = S [3:0] $end
$var wire 4 > P [3:0] $end
$var wire 4 ? G [3:0] $end
$upscope $end
$scope module dff1 $end
$var wire 1 & clk $end
$var wire 1 @ d $end
$var reg 1 A q $end
$upscope $end
$scope module dff10 $end
$var wire 1 & clk $end
$var wire 1 B d $end
$var reg 1 C q $end
$upscope $end
$scope module dff11 $end
$var wire 1 & clk $end
$var wire 1 D d $end
$var reg 1 E q $end
$upscope $end
$scope module dff12 $end
$var wire 1 & clk $end
$var wire 1 F d $end
$var reg 1 G q $end
$upscope $end
$scope module dff13 $end
$var wire 1 & clk $end
$var wire 1 + d $end
$var reg 1 " q $end
$upscope $end
$scope module dff2 $end
$var wire 1 & clk $end
$var wire 1 H d $end
$var reg 1 I q $end
$upscope $end
$scope module dff3 $end
$var wire 1 & clk $end
$var wire 1 J d $end
$var reg 1 K q $end
$upscope $end
$scope module dff4 $end
$var wire 1 & clk $end
$var wire 1 L d $end
$var reg 1 M q $end
$upscope $end
$scope module dff5 $end
$var wire 1 & clk $end
$var wire 1 N d $end
$var reg 1 O q $end
$upscope $end
$scope module dff6 $end
$var wire 1 & clk $end
$var wire 1 P d $end
$var reg 1 Q q $end
$upscope $end
$scope module dff7 $end
$var wire 1 & clk $end
$var wire 1 R d $end
$var reg 1 S q $end
$upscope $end
$scope module dff8 $end
$var wire 1 & clk $end
$var wire 1 T d $end
$var reg 1 U q $end
$upscope $end
$scope module dff9 $end
$var wire 1 & clk $end
$var wire 1 V d $end
$var reg 1 W q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xW
xV
xU
1T
xS
1R
xQ
0P
xO
1N
xM
1L
xK
0J
xI
0H
xG
xF
xE
xD
xC
xB
xA
1@
bx ?
bx >
bx =
x<
x;
x:
09
x8
x7
06
x5
04
03
x2
x1
x0
bx /
bx .
bx -
bx ,
x+
bx *
bx )
b1101 (
b1001 '
0&
0%
b1101 $
b1001 #
x"
bx !
$end
#5
1D
0F
1B
0V
01
02
1+
b110 )
b110 =
10
05
07
08
0:
0;
0<
b100 >
b1001 ?
1A
0I
0K
b1001 -
b1001 .
1M
1O
0Q
1S
b1101 ,
b1101 /
1U
1&
#10
0&
#15
1"
0G
1E
1C
b110 !
b110 *
0W
1&
#20
0@
1H
0&
b1010 #
b1010 '
#25
1V
1B
00
b111 )
b111 =
b1000 ?
b111 >
0A
b1010 -
b1010 .
1I
1&
#30
0&
#35
b111 !
b111 *
1W
1&
#40
0T
0&
b101 $
b101 (
#45
1F
0+
b1111 )
b1111 =
b1111 >
b0 ?
b101 ,
b101 /
0U
1&
#50
0&
#55
0"
b1111 !
b1111 *
1G
1&
#60
0&
